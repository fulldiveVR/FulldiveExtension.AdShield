/*
 * This file is part of Blokada.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * Copyright Â© 2022 Blocka AB. All rights reserved.
 *
 * @author Karol Gusak (karol@blocka.net)
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-android'
apply plugin: 'com.joom.lightsaber.android'

def versionMajor = 1
def versionMinor = 5
def versionPatch = 17

android {

    namespace 'org.adshield'

    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    ndkVersion "27.0.12077973"

    signingConfigs {
        release {
            storeFile file('../keys/keys.jks')
            storePassword System.getenv("FULLDIVE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("FULLDIVE_ALIAS")
            keyPassword System.getenv("FULLDIVE_ALIAS_PASSWORD")
        }
    }

    defaultConfig {
        applicationId "com.fulldive.extension.adshield" // Not a real name, see flavors below
        minSdkVersion 24
        targetSdkVersion 34
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }

        buildConfigField 'String', 'API_URL', '\"https://api.fdvr.co\"'
        buildConfigField 'String', 'GRPC_API_HOST', '\"qc.imversed.com\"'
        buildConfigField 'String', 'FLURRY_API_KEY', new File('./flurrykey.txt').getText('UTF-8')
        buildConfigField 'String', 'EXTENSIONS_CONTENT_PROVIDER', '\"com.fulldive.extension.adshield.dnschanger.FulldiveContentProvider\"'
        buildConfigField 'long', 'XP_PER_AD', '1'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dnschanger"
            // By default it is a 'debuggable' build, signed with a debug key.
        }

        stage {
            applicationIdSuffix ".stage"
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
            buildConfigField 'String', 'API_URL', '\"https://api-staging.fdvr.co\"'
            buildConfigField 'String', 'GRPC_API_HOST', '\"qt.imversed.com\"'
            buildConfigField 'String', 'EXTENSIONS_CONTENT_PROVIDER', '\"com.fulldive.extension.adshield.stage.FulldiveContentProvider\"'
            buildConfigField 'long', 'XP_PER_AD', '40'
        }

        release {
            applicationIdSuffix ".dnschanger"
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFileName = "AdShield-v${android.defaultConfig.versionName}-${variant.buildType.name}.apk"
                }
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        beta {
            // 'Beta' are builds used for internal and external beta testing.
            initWith(release)
            matchingFallbacks = ['release']
            debuggable = true
            minifyEnabled false
        }
    }

    // It needs to be defined in order for the flavor setup to work.
    flavorDimensions("model")

    productFlavors {
        full {
            // full lands on blokada.org, and on Huawei App Gallery
            applicationId "com.fulldive.extension.adshield.full"
        }

        google {
            // google build lands on Google Play, missing some features.
            applicationId "com.fulldive.extension.adshield"
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        jniLibs {
            excludes += ['lib/x86_64/freebsd/libscrypt.so', 'lib/x86_64/linux/libscrypt.so']
        }
        resources {
            excludes += ['lib/x86_64/darwin/libscrypt.dylib']
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }

    sourceSets {
        main.java.srcDirs += 'src/legacy/kotlin'

        main.java.srcDirs += 'src/engine/kotlin'
        main.jniLibs.srcDirs += 'src/engine/jniLibs'

        debug.java.srcDirs += 'src/mock/kotlin'

        google.res.srcDirs += 'src/google/res'
        google.java.srcDirs += 'src/google/kotlin'

        full.res.srcDirs += 'src/notgoogle/res'
        full.java.srcDirs += 'src/notgoogle/kotlin'

        // Do not include translations in debug builds (does not clutter search during development)
        release.res.srcDirs += 'src/translations/res'
        beta.res.srcDirs += 'src/translations/res'
    }
}

dependencies {
    implementation project(path: ':iap')
    implementation project(path: ':startapppopups')
    // forgot what is it for
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    implementation 'org.jsoup:jsoup:1.13.1'
    // androidx and kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'androidx.webkit:webkit:1.11.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.0'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'

    def work_version = "2.9.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //room
    implementation "androidx.room:room-runtime:$libsVersions.room"
    implementation "androidx.room:room-ktx:$libsVersions.room"
    implementation "androidx.room:room-rxjava2:$libsVersions.roomRx"
    kapt "androidx.room:room-compiler:$libsVersions.room"

    // json
    implementation 'com.squareup.moshi:moshi:1.15.1'
    implementation 'com.squareup.moshi:moshi-adapters:1.15.1'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.15.1'

    implementation 'com.google.code.gson:gson:2.10.1'

    // http and rest
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    // dynamic translations
    implementation 'com.akexorcist:localization:1.2.6'

    // engine deps
    implementation 'org.pcap4j:pcap4j-core:1.7.7'
    implementation 'org.pcap4j:pcap4j-packetfactory-propertiesbased:1.7.7'
    implementation 'dnsjava:dnsjava:2.1.9'
    implementation 'org.slf4j:slf4j-nop:1.6.1'

    // unzip default blocklist
    implementation 'net.lingala.zip4j:zip4j:2.6.4'

    implementation "org.adblockplus:adblock-android-settings:4.4.0"

    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    implementation 'com.joom.lightsaber:lightsaber-core-kotlin:1.0.0-alpha23'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.imversed:client:1.0.1'
    implementation 'org.web3j:core:4.6.0-android'
    implementation 'io.grpc:grpc-api:1.57.0'
    implementation 'io.grpc:grpc-protobuf:1.57.0'
    implementation 'io.grpc:grpc-okhttp:1.45.0'
    implementation 'io.grpc:grpc-stub:1.57.0'
    implementation 'io.grpc:grpc-kotlin-stub:1.2.1'
    implementation 'org.bitcoinj:bitcoinj-core:0.15.2'
    implementation "com.github.moxy-community:moxy:2.2.2"
    implementation "com.github.moxy-community:moxy-android:2.2.2"
    implementation "com.github.moxy-community:moxy-androidx:2.2.2"
    implementation "com.github.moxy-community:moxy-ktx:2.2.2"
    kapt "com.github.moxy-community:moxy-compiler:2.2.2"

    implementation "com.airbnb.android:lottie:5.2.0"
    implementation 'com.google.code.gson:gson:2.10.1'

    // test deps
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // legacy (for import of v4 settings)
    implementation 'io.paperdb:paperdb:2.7.1'

    implementation 'com.flurry.android:analytics:14.4.0'
    implementation 'com.google.android.gms:play-services-measurement-api:22.0.2'
    implementation 'com.google.firebase:firebase-analytics:22.0.2'
    implementation 'com.google.firebase:firebase-config:22.0.0'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module = "../blocka_engine"
    libname = "blocka_dns"
    targets = ["arm", "arm64", "x86", "x86_64"]
    profile = "release"
}